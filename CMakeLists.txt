cmake_minimum_required(VERSION 2.8)
set(CMAKE_CXX_STANDARD 17)
if(MSVC)
	set(CMAKE_FIND_LIBRARY_SUFFIXES ".lib")
else()
	set(CMAKE_FIND_LIBRARY_SUFFIXES ".a")
endif()
set(OpenCV_STATIC ON)
cmake_policy(SET CMP0028 NEW)

if(${CC_ARM})
	set("OpenCV_DIR" ~/opencv/build)
	set(CMAKE_SYSTEM_NAME Linux)
	set(CMAKE_SYSTEM_PROCESSOR arm)
	set(CMAKE_C_COMPILER /bin/aarch64-linux-gnu-gcc)
	set(CMAKE_CXX_COMPILER /bin/aarch64-linux-gnu-g++)
endif()

project(Vision2020)

if(MSVC)
	set(OpenCV_DIR C:\\OpenCV\\build)
	set(WPILIB_PATH C:\\WPILib\\build) 
else()
	set(WPILIB_PATH /usr/local/wpilib)
	find_package(Eigen3 3.3 REQUIRED NO_MODULE)
endif()

include_directories(${WPILIB_PATH}/lib ${WPILIB_PATH}/include ${WPILIB_PATH}/include/cameraserver ${WPILIB_PATH}/include/cscore ${WPILIB_PATH}/include/ntcore ${WPILIB_PATH}/include/wpiutil)

find_package(OpenCV REQUIRED)
find_package(Threads REQUIRED)

if(MSVC)
	add_executable(client_win client_win.cpp)
	add_executable(server_win server_win.cpp)
	target_link_libraries(client_win ${OpenCV_LIBS} ${CMAKE_THREAD_LIBS_INIT} ${WPILIB_PATH}/lib/cameraserverd.lib ${WPILIB_PATH}/lib/cscored.lib ${WPILIB_PATH}/lib/ntcored.lib ${WPILIB_PATH}/lib/wpiutild.lib)
	target_link_libraries(server_win ${OpenCV_LIBS} ${CMAKE_THREAD_LIBS_INIT} ${WPILIB_PATH}/lib/cameraserverd.lib ${WPILIB_PATH}/lib/cscored.lib ${WPILIB_PATH}/lib/ntcored.lib ${WPILIB_PATH}/lib/wpiutild.lib)
else()
	add_executable(client client.cpp)
	add_executable(server server.cpp)
	target_link_libraries(client ${OpenCV_LIBS} ${CMAKE_THREAD_LIBS_INIT} ${WPILIB_PATH}/lib/libcameraserver.a ${WPILIB_PATH}/lib/libcscore.a ${WPILIB_PATH}/lib/libntcore.a ${WPILIB_PATH}/lib/libwpiutil.a)
	target_link_libraries(server ${OpenCV_LIBS} ${CMAKE_THREAD_LIBS_INIT} ${WPILIB_PATH}/lib/libcameraserver.a ${WPILIB_PATH}/lib/libcscore.a ${WPILIB_PATH}/lib/libntcore.a ${WPILIB_PATH}/lib/libwpiutil.a)
endif()
